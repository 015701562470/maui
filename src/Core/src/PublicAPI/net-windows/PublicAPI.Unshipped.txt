#nullable enable
Microsoft.Maui.Handlers.ISwipeItemMenuItemHandler.PlatformView.get -> Microsoft.UI.Xaml.Controls.Button!
Microsoft.Maui.Handlers.ISwipeItemViewHandler.PlatformView.get -> Microsoft.Maui.Platform.ContentPanel!
Microsoft.Maui.Handlers.ISwipeViewHandler.PlatformView.get -> Microsoft.Maui.Platform.MauiSwipeView!
Microsoft.Maui.Platform.MauiSwipeView
Microsoft.Maui.Platform.MauiSwipeView.Dispose() -> void
Microsoft.Maui.Platform.MauiSwipeView.MauiSwipeView() -> void
override Microsoft.Maui.Handlers.SwipeItemMenuItemHandler.ConnectHandler(Microsoft.UI.Xaml.Controls.Button! platformView) -> void
override Microsoft.Maui.Handlers.SwipeItemMenuItemHandler.CreatePlatformElement() -> Microsoft.UI.Xaml.Controls.Button!
override Microsoft.Maui.Handlers.SwipeItemMenuItemHandler.DisconnectHandler(Microsoft.UI.Xaml.Controls.Button! platformView) -> void
override Microsoft.Maui.Handlers.SwipeItemViewHandler.CreatePlatformView() -> Microsoft.Maui.Platform.ContentPanel!
override Microsoft.Maui.Handlers.SwipeItemViewHandler.SetVirtualView(Microsoft.Maui.IView! view) -> void
override Microsoft.Maui.Handlers.SwipeViewHandler.ConnectHandler(Microsoft.Maui.Platform.MauiSwipeView! platformView) -> void
override Microsoft.Maui.Handlers.SwipeViewHandler.CreatePlatformView() -> Microsoft.Maui.Platform.MauiSwipeView!
override Microsoft.Maui.Handlers.SwipeViewHandler.DisconnectHandler(Microsoft.Maui.Platform.MauiSwipeView! platformView) -> void
override Microsoft.Maui.Platform.MauiSwipeView.ArrangeOverride(Windows.Foundation.Size finalSize) -> Windows.Foundation.Size
Microsoft.Maui.IApplication.UserAppTheme.get -> Microsoft.Maui.ApplicationModel.AppTheme
Microsoft.Maui.Hosting.MauiApp.DisposeAsync() -> System.Threading.Tasks.ValueTask
Microsoft.Maui.Layouts.FlexBasis.Equals(Microsoft.Maui.Layouts.FlexBasis other) -> bool
Microsoft.Maui.Platform.MauiWebView.MauiWebView(Microsoft.Maui.Handlers.WebViewHandler! handler) -> void
Microsoft.Maui.SizeRequest.Equals(Microsoft.Maui.SizeRequest other) -> bool
override Microsoft.Maui.Layouts.FlexBasis.Equals(object? obj) -> bool
override Microsoft.Maui.Layouts.FlexBasis.GetHashCode() -> int
override Microsoft.Maui.SizeRequest.Equals(object? obj) -> bool
override Microsoft.Maui.SizeRequest.GetHashCode() -> int
static Microsoft.Maui.GridLength.operator !=(Microsoft.Maui.GridLength left, Microsoft.Maui.GridLength right) -> bool
static Microsoft.Maui.GridLength.operator ==(Microsoft.Maui.GridLength left, Microsoft.Maui.GridLength right) -> bool
static Microsoft.Maui.Layouts.FlexBasis.operator !=(Microsoft.Maui.Layouts.FlexBasis left, Microsoft.Maui.Layouts.FlexBasis right) -> bool
static Microsoft.Maui.Layouts.FlexBasis.operator ==(Microsoft.Maui.Layouts.FlexBasis left, Microsoft.Maui.Layouts.FlexBasis right) -> bool
static Microsoft.Maui.Layouts.LayoutExtensions.ArrangeContentUnbounded(this Microsoft.Maui.IContentView! contentView, Microsoft.Maui.Graphics.Rect bounds) -> Microsoft.Maui.Graphics.Size
Microsoft.Maui.IWebView.UserAgent.get -> string?
Microsoft.Maui.IWebView.UserAgent.set -> void
static Microsoft.Maui.Handlers.WebViewHandler.MapUserAgent(Microsoft.Maui.Handlers.IWebViewHandler! handler, Microsoft.Maui.IWebView! webView) -> void
static Microsoft.Maui.Platform.WebViewExtensions.UpdateUserAgent(this Microsoft.UI.Xaml.Controls.WebView2! platformWebView, Microsoft.Maui.IWebView! webView) -> void
*REMOVED*Microsoft.Maui.WeakEventManager.HandleEvent(object! sender, object! args, string! eventName) -> void
Microsoft.Maui.WeakEventManager.HandleEvent(object? sender, object? args, string! eventName) -> void
static Microsoft.Maui.SizeRequest.operator !=(Microsoft.Maui.SizeRequest left, Microsoft.Maui.SizeRequest right) -> bool
static Microsoft.Maui.SizeRequest.operator ==(Microsoft.Maui.SizeRequest left, Microsoft.Maui.SizeRequest right) -> bool
*REMOVED*Microsoft.Maui.Platform.MauiWebView.MauiWebView() -> void