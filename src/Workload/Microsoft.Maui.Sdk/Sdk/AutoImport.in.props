<Project>

  <!--
    These implicit <PackageReference/> pull dependencies from NuGet transitively.
    They are first added to the <_MauiImplicitPackageReference/> item group to list the the desired
    packages. Then the implicit packages are added into the project, exclding any duplicate
    packages added via the projet or user props.

    This logic only installs packages if and only if $(UseMauiNuGets) is not true. This property
    allows the user to totally override all the default nugets installed.

    These are imported in the AutoImport.props because the IDE now no longer adds packages with
    just the "Include" attribute, but also with "Update". As a result, we need to first add all
    the packages we want and let the IDE/user Update OR Include the same ones. We will remove
    our duplicates later in BundledVersions.targets.
  -->
  <ItemGroup Condition=" '$(EnableMauiImplicitPackageReferences)' != 'false' and '$(UseMauiNuGets)' != 'true' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and '$(TargetFrameworkVersion)' != '' and $([MSBuild]::VersionEquals('$(TargetFrameworkVersion)', '@MAUI_DOTNET_VERSION@')) ">
    <_MauiImplicitPackageReference Include="Microsoft.Maui.Resizetizer" Version="$(MauiVersion)" PrivateAssets="all" Condition=" '$(UseMauiAssets)' == 'true' " />
    <_MauiImplicitPackageReference Include="Microsoft.Maui.Essentials" Version="$(MauiVersion)" Condition=" '$(UseMauiEssentials)' == 'true' ">
      <PrivateAssets Condition=" '$(OutputType)' == 'Library' and '$(AndroidApplication)' != 'true' ">all</PrivateAssets>
    </_MauiImplicitPackageReference>
    <_MauiImplicitPackageReference Include="Microsoft.Maui.Core" Version="$(MauiVersion)" Condition=" '$(UseMauiCore)' == 'true' ">
      <PrivateAssets Condition=" '$(OutputType)' == 'Library' and '$(AndroidApplication)' != 'true' ">all</PrivateAssets>
    </_MauiImplicitPackageReference>
    <_MauiImplicitPackageReference Include="Microsoft.Maui.Controls" Version="$(MauiVersion)" Condition=" '$(UseMaui)' == 'true' ">
      <PrivateAssets Condition=" '$(OutputType)' == 'Library' and '$(AndroidApplication)' != 'true' ">all</PrivateAssets>
    </_MauiImplicitPackageReference>
    <_MauiImplicitPackageReference Include="Microsoft.Maui.Controls.Compatibility" Version="$(MauiVersion)" Condition=" '$(UseMaui)' == 'true' and '$(UseMauiCompat)' == 'true' ">
      <PrivateAssets Condition=" '$(OutputType)' == 'Library' and '$(AndroidApplication)' != 'true' ">all</PrivateAssets>
    </_MauiImplicitPackageReference>
    <_MauiImplicitPackageReference Include="Microsoft.AspNetCore.Components.WebView.Maui" Version="$(MauiVersion)" Condition=" '$(UseMaui)' == 'true' and '$(UsingMicrosoftNETSdkRazor)' == 'true' ">
      <PrivateAssets Condition=" '$(OutputType)' == 'Library' and '$(AndroidApplication)' != 'true' ">all</PrivateAssets>
    </_MauiImplicitPackageReference>
  </ItemGroup>
  <ItemGroup Condition=" '$(EnableMauiImplicitPackageReferences)' != 'false' and '$(UseMauiNuGets)' != 'true' ">
    <PackageReference Include="@(_MauiImplicitPackageReference)" Exclude="@(PackageReference)" IsMauiImplicitPackageReference="true" />
  </ItemGroup>

</Project>
