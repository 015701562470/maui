<Project>

  <PropertyGroup>
    <_MauiRuntimePackVersion>$(MauiVersion)</_MauiRuntimePackVersion>
    <_MauiRuntimePackVersion Condition=" '$(_MauiRuntimePackVersion)' == '' ">**FromWorkload**</_MauiRuntimePackVersion>
    <MauiWorkloadVersion>@VERSION@</MauiWorkloadVersion>
    <MauiWorkloadTargetFramework>@TFM@</MauiWorkloadTargetFramework>
    <MauiVersion Condition=" '$(MauiVersion)' == '' ">$(MauiWorkloadVersion)</MauiVersion>
    <!-- $(_MauiPlatformName) is used as RIDs as well as a suffix to targeting pack names -->
    <_MauiPlatformName Condition=" '$(TargetPlatformIdentifier)' == 'windows' ">win</_MauiPlatformName>
    <_MauiPlatformName Condition=" '$(TargetPlatformIdentifier)' != 'windows' ">$(TargetPlatformIdentifier.ToLowerInvariant())</_MauiPlatformName>
    <_MauiPlatformName Condition=" '$(_MauiPlatformName)' == '' ">any</_MauiPlatformName>
    <_MauiRuntimePackAlwaysCopyLocal Condition=" '$(_MauiPlatformName)' == 'any' ">true</_MauiRuntimePackAlwaysCopyLocal>
  </PropertyGroup>

  <!--
    These implicit <PackageReference/> pull dependencies from NuGet transitively.
    They are first added to the <_MauiImplicitPackageReference/> item group to list the the desired
    packages. Then the packages that were specified by the user are removed from the list. Finally,
    the remaining implicit packages are added into the project.
  -->
  <ItemGroup Condition=" '$(UseMauiAssets)' == 'true' ">
    <_MauiImplicitPackageReference Include="Microsoft.Maui.Resizetizer" Version="$(MauiVersion)" IsImplicitlyDefined="true" PrivateAssets="all" />
  </ItemGroup>
  <ItemGroup Condition=" '$(UseMauiEssentials)' == 'true' ">
    <_MauiImplicitPackageReference Include="Microsoft.Maui.Essentials" Version="$(MauiVersion)" IsImplicitlyDefined="true">
      <PrivateAssets Condition=" '$(OutputType)' == 'Library' and '$(AndroidApplication)' != 'true' ">all</PrivateAssets>
    </_MauiImplicitPackageReference>
  </ItemGroup>
  <ItemGroup Condition=" '$(UseMauiCore)' == 'true' ">
    <_MauiImplicitPackageReference Include="Microsoft.Maui.Core" Version="$(MauiVersion)" IsImplicitlyDefined="true">
      <PrivateAssets Condition=" '$(OutputType)' == 'Library' and '$(AndroidApplication)' != 'true' ">all</PrivateAssets>
    </_MauiImplicitPackageReference>
  </ItemGroup>
  <ItemGroup Condition=" '$(UseMaui)' == 'true' ">
    <_MauiImplicitPackageReference Include="Microsoft.Maui.Controls" Version="$(MauiVersion)" IsImplicitlyDefined="true">
      <PrivateAssets Condition=" '$(OutputType)' == 'Library' and '$(AndroidApplication)' != 'true' ">all</PrivateAssets>
    </_MauiImplicitPackageReference>
    <_MauiImplicitPackageReference Include="Microsoft.Maui.Controls.Compatibility" Version="$(MauiVersion)" IsImplicitlyDefined="true">
      <PrivateAssets Condition=" '$(OutputType)' == 'Library' and '$(AndroidApplication)' != 'true' ">all</PrivateAssets>
    </_MauiImplicitPackageReference>
  </ItemGroup>
  <ItemGroup Condition=" '$(UseMaui)' == 'true' and '$(UsingMicrosoftNETSdkRazor)' == 'true' ">
    <_MauiImplicitPackageReference Include="Microsoft.AspNetCore.Components.WebView.Maui" Version="$(MauiVersion)" IsImplicitlyDefined="true">
      <PrivateAssets Condition=" '$(OutputType)' == 'Library' and '$(AndroidApplication)' != 'true' ">all</PrivateAssets>
    </_MauiImplicitPackageReference>
  </ItemGroup>
  <ItemGroup Condition=" ('$(UseMaui)' == 'true' or '$(UseMauiCore)' == 'true') and ('$(TargetPlatformIdentifier)' == 'windows') ">
    <_MauiImplicitPackageReference Include="Microsoft.Windows.SDK.BuildTools" Version="@MicrosoftWindowsSDKBuildToolsPackageVersion@" IsImplicitlyDefined="true" PrivateAssets="all" />
  </ItemGroup>
  <ItemGroup>
    <_MauiImplicitPackageReference Remove="@(PackageReference)" />
    <PackageReference Include="@(_MauiImplicitPackageReference)" />
  </ItemGroup>

</Project>