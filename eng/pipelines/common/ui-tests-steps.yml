parameters:
  platform: '' # [ android, ios ]
  path: '' # path to csproj
  device: '' # the xharness device to use
  cakeArgs: '' # additional cake args
  app: '' #path to app to test
  provisionatorChannel: 'latest'
  agentPoolAccessToken: ''

steps:
  - template: provision.yml
    parameters:
      platform: macos
      skipXcode: false
      provisionatorChannel: ${{ parameters.provisionatorChannel }}

  - task: NodeTool@0
    inputs:
      versionSpec: "18.13.0"

  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        node -v
        npm install -g appium@next
        appium -v
        appium driver install uiautomator2
    displayName: "Install Appium"
    continueOnError: true

  - pwsh: ./build.ps1 --target=dotnet --configuration="Release" --verbosity=diagnostic
    displayName: 'Install .NET'
    retryCountOnTaskFailure: 3
    env:
      DOTNET_TOKEN: $(dotnetbuilds-internal-container-read-token)
      PRIVATE_BUILD: $(PrivateBuild)

  - pwsh: echo "##vso[task.prependpath]$(DotNet.Dir)"
    displayName: 'Add .NET to PATH'

  - pwsh: ./build.ps1 --target=dotnet-buildtasks --configuration="Release"
    displayName: 'Build the MSBuild Tasks'

  - pwsh: ./build.ps1 --target=dotnet-samples --configuration="Release" --verbosity=diagnostic
    displayName: 'Build the samples'

  - script: appium server --base-path=/wd/hub &
    displayName: "Start Appium server"

  - pwsh: ./build.ps1 -Script eng/devices/${{ parameters.platform }}.cake --target=uitest --project="${{ parameters.path }}" --app="${{ parameters.app }}" --device=${{ parameters.device }} --results="$(TestResultsDirectory)" --binlog="$(LogDirectory)" ${{ parameters.cakeArgs }}
    displayName: $(Agent.JobName)
  #  retryCountOnTaskFailure: 2
  
  - task: PublishTestResults@2
    displayName: Publish the $(System.PhaseName) test results
    condition: always()
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: '$(TestResultsDirectory)/**/*'
      testRunTitle: '$(System.PhaseName)'

  - task: PublishBuildArtifacts@1
    condition: always()
    displayName: publish artifacts

  # This must always be placed as the last step in the job
  - template: agent-rebooter/mac.v1.yml@yaml-templates
    parameters:
      AgentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
