parameters:
- name: platform
  type: string
  default: '' # [ android, ios ]

- name: path
  type: string
  default: '' # path to csproj

- name: device
  type: string
  default: '' # the xharness device to use

- name: cakeArgs
  type: string
  default: '' # additional cake args

- name: provisionatorChannel
  type: string
  default: 'latest'

- name: agentPoolAccessToken
  type: string
  default: ''

- name: artifactName
  type: string
  default: 'nuget'

- name: artifactItemPattern
  type: string
  default: '**/*.nupkg'

- name: checkoutDirectory
  type: string
  default: $(System.DefaultWorkingDirectory)

- name: useArtifacts
  type: boolean
  default: false

- name: prepareSteps
  type: stepList
  default: []

steps:

- template: provision.yml
  parameters:
    platform: macos
    skipXcode: ${{ eq(parameters.platform, 'android') }}
    provisionatorChannel: ${{ parameters.provisionatorChannel }}
    checkoutDirectory: ${{ parameters.checkoutDirectory }}

- pwsh: ./build.ps1 --target=dotnet --configuration="Release" --verbosity=diagnostic
  displayName: 'Install .NET'
  retryCountOnTaskFailure: 3
  env:
    DOTNET_TOKEN: $(dotnetbuilds-internal-container-read-token)
    PRIVATE_BUILD: $(PrivateBuild)

- pwsh: echo "##vso[task.prependpath]$(DotNet.Dir)"
  displayName: 'Add .NET to PATH'

- ${{ if eq(parameters.useArtifacts, true) }}:
  - task: DownloadBuildArtifacts@0
    displayName: 'Download Packages'
    inputs:
      artifactName: ${{ parameters.artifactName }}
      itemPattern: ${{ parameters.artifactItemPattern }}
      downloadPath: $(System.DefaultWorkingDirectory)/artifacts

  - pwsh: Move-Item -Path artifacts\${{ parameters.artifactName }}\*.nupkg -Destination artifacts -Force
    displayName: Move the downloaded artifacts

  - pwsh: ./build.ps1 --target=dotnet-local-workloads --verbosity=diagnostic
    displayName: 'Install .NET (Local Workloads)'
    retryCountOnTaskFailure: 3
    workingDirectory: ${{ parameters.checkoutDirectory }}
    env:
      DOTNET_TOKEN: $(dotnetbuilds-internal-container-read-token)
      PRIVATE_BUILD: $(PrivateBuild)

- ${{ else }}:
  - pwsh: ./build.ps1 --target=dotnet-buildtasks --configuration="Release"
    displayName: 'Build the MSBuild Tasks'

- pwsh: ./build.ps1 -Script eng/devices/${{ parameters.platform }}.cake --project="${{ parameters.path }}" --device=${{ parameters.device }} --results="$(TestResultsDirectory)" --binlog="$(LogDirectory)" ${{ parameters.cakeArgs }}
  displayName: $(Agent.JobName)
  workingDirectory: ${{ parameters.checkoutDirectory }}
  retryCountOnTaskFailure: 2

- task: PublishTestResults@2
  displayName: Publish the $(System.PhaseName) test results
  condition: always()
  inputs:
    testResultsFormat: xUnit
    testResultsFiles: '$(TestResultsDirectory)/**/TestResults.xml'
    testRunTitle: '$(System.PhaseName)'

- task: PublishBuildArtifacts@1
  displayName: Publish Artifacts
  condition: always()
  inputs:
    artifactName: $(System.PhaseName)

# This must always be placed as the last step in the job
#- template: agent-rebooter/mac.v1.yml@yaml-templates
#  parameters:
#    AgentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
