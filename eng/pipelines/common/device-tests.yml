parameters:
- name: androidPool
  type: object
  default: { }

- name: iosPool
  type: object
  default: { }

- name: androidApiLevels
  type: object
  default: [ 33 ]

- name: iosVersions
  type: object
  default: [ 'latest' ]

- name: provisionatorChannel
  type: string
  default: 'latest'

- name: agentPoolAccessToken
  type: string
  default: ''

- name: artifactName
  type: string
  default: 'nuget'

- name: artifactItemPattern
  type: string
  default: '**/*.nupkg'

- name: checkoutDirectory
  type: string
  default: $(System.DefaultWorkingDirectory)

- name: useArtifacts
  type: boolean
  default: false

- name: condition
  type: boolean
  default: true

- name: dependsOn
  type: object
  default: []

- name: stageNamePrefix
  type: string
  default: ''

- name: stageHumanNamePrefix
  type: string
  default: ''

- name: prepareSteps
  type: stepList
  default: []

- name: projects
  type: object
  default:
    - name: name
      desc: Human Description
      android: /optional/path/to/android.csproj
      ios: /optional/path/to/ios.csproj

stages:

  - stage: ${{ parameters.stageNamePrefix }}android_device_tests
    displayName: ${{ parameters.stageHumanNamePrefix }} Android Device Tests
    dependsOn: ${{ parameters.parameters }}
    condition: ${{ parameters.condition }}
    jobs:
      - ${{ each project in parameters.projects }}:
        - ${{ if ne(project.android, '') }}:
          - ${{ each api in parameters.androidApiLevels }}:
            - ${{ if not(containsValue(project.androidApiLevelsExclude, api)) }}:
              - job: android_device_tests_${{ project.name }}_${{ api }}
                workspace:
                  clean: all
                displayName: ${{ coalesce(project.desc, project.name) }} (API ${{ api }})
                pool: ${{ parameters.androidPool }}
                variables:
                  ${{ if ge(api, 24) }}:
                    ANDROID_EMULATORS: "system-images;android-${{ api }};google_apis_playstore;x86"
                  ${{ if lt(api, 24) }}:
                    ANDROID_EMULATORS: "system-images;android-${{ api }};google_apis;x86"
                  REQUIRED_XCODE: $(DEVICETESTS_REQUIRED_XCODE)
                steps:
                  - template: device-tests-steps.yml
                    parameters:
                      platform: android
                      path: ${{ project.android }}
                      device: android-emulator-32_${{ api }}
                      provisionatorChannel: ${{ parameters.provisionatorChannel }}
                      agentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
                      artifactName: ${{ parameters.artifactName }}
                      artifactItemPattern: ${{ parameters.artifactItemPattern }}
                      checkoutDirectory: ${{ parameters.checkoutDirectory }}
                      useArtifacts: ${{ parameters.useArtifacts }}
                      prepareSteps: ${{ parameters.prepareSteps }}

  - stage: ${{ parameters.stageNamePrefix }}ios_device_tests
    displayName: ${{ parameters.parameters.stageHumanNamePrefix }} iOS Device Tests
    dependsOn: ${{ parameters.parameters }}
    condition: ${{ parameters.condition }}
    jobs:
      - ${{ each project in parameters.projects }}:
        - ${{ if ne(project.ios, '') }}:
          - ${{ each version in parameters.iosVersions }}:
            - ${{ if not(containsValue(project.iosVersionsExclude, version)) }}:
              - job: ios_device_tests_${{ project.name }}_${{ replace(version, '.', '_') }}
                workspace:
                  clean: all
                displayName: ${{ coalesce(project.desc, project.name) }} (v${{ version }})
                pool: ${{ parameters.iosPool }}
                variables:
                  REQUIRED_XCODE: $(DEVICETESTS_REQUIRED_XCODE)
                steps:
                  - template: device-tests-steps.yml
                    parameters:
                      platform: ios
                      path: ${{ project.ios }}
                      ${{ if eq(version, 'latest') }}:
                        device: ios-simulator-64
                      ${{ if ne(version, 'latest') }}:
                        device: ios-simulator-64_${{ version }}
                      provisionatorChannel: ${{ parameters.provisionatorChannel }}
                      agentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
                      artifactName: ${{ parameters.artifactName }}
                      artifactItemPattern: ${{ parameters.artifactItemPattern }}
                      checkoutDirectory: ${{ parameters.checkoutDirectory }}
                      useArtifacts: ${{ parameters.useArtifacts }}
                      prepareSteps: ${{ parameters.prepareSteps }}
